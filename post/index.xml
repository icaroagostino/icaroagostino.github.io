<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Ícaro Agostino</title>
    <link>/post/</link>
    <description>Recent content in Posts on Ícaro Agostino</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 20 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rodando modelos [R] na nuvem - parte 2: Containers com Docker!</title>
      <link>/post/docker/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/docker/</guid>
      <description>Parte 2: Rodando aplicações em containers Esse tutorial é a segunda parte da serie Rodando modelos [R] na nuvem, na primeira parte aprendemos como crias APIs com o pacote plumber (se você ainda não leu clique aqui). Nessa parte vamos aprender a como colocar nossa aplicação em containers utilizando Docker. E na parte final vamos subir esse container para a cloud da Amazon (AWS).
O foco aqui será abordar o conceito de conteiner, assim como a parte prática.</description>
    </item>
    
    <item>
      <title>Rodando modelos [R] na nuvem - parte 1: Criando APIs</title>
      <link>/post/plumber/</link>
      <pubDate>Tue, 14 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/plumber/</guid>
      <description>Parte 1: Criando API&#39;s com o pacote plumber Essa sequência de tutoriais vai ser dividida em 3 partes, aqui vamos aprender a construir API&#39;s com o pacote plumber. Na parte 2 vamos entender como colocar uma API dentro de um contêiner utilizando docker. E na parte final vamos abordar como colocar sua aplicação dockerizada para rodar na nuvem utilizando a Amazon Web Service (AWS).
Nesse post vamos aprender como transformar um modelo estatístico/ML em uma API utilizando R com o pacote plumber.</description>
    </item>
    
    <item>
      <title>Prevendo o futuro com Redes Neurais Artificiais</title>
      <link>/post/ann/</link>
      <pubDate>Sat, 04 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/ann/</guid>
      <description>Photo by Soumil Kumar from Pexels
Previsão com Redes Neurais Artificiais Uma das abordagens que mais tem despertado interesse para previsão são as Redes Neurais Artificiais, em que você treina um modelo bio-inspirado capaz de aprender padrões não lineares e fazer predições.
Nesse post vamos demonstrar de forma simplificada como treinar um modelo de previsão utilizando Redes Neurais Artificiais Autorregressivas (NNAR) em R para para previsão de séries temporais. Existem diversas arquiteturas de Redes Neurais disponíveis, nesse tutorial vamos utilizar a implementação feed-forward utilizando o pacote forecast.</description>
    </item>
    
    <item>
      <title>Relatório dinâmico com Rmarkdown: COVID-19 no Brasil</title>
      <link>/post/rmd-cov19/</link>
      <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/rmd-cov19/</guid>
      <description>Cover Photo by Lukas from Pexels
Criando relatórios dinâmicos em R Nesse post vamos aprender a criar relatórios dinâmicos em R utilizando Rmarkdown. Para isso vamos consultar dados online utilizando uma API externa e utilizar esses dados para de forma automática gerar um relatório em .html ou .pdf.
Se você trabalha em uma empresa e precisa por exemplo fazer relatórios de vendas semanais, usar o Rmarkdown para gerar relatórios dinâmicos pode facilitar sua vida, mesmo que você não tenha uma API para consultar os dados automaticamente, é possível automatizar da mesma forma leitura de planilhas e outros tipos de arquivos.</description>
    </item>
    
    <item>
      <title>O Problema de Monty Hall</title>
      <link>/post/monty-hall/</link>
      <pubDate>Fri, 27 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/monty-hall/</guid>
      <description>Cover Photo by fotografierende from Pexels
O Problema de Monty Hall Nesse post vamos abordar um aspecto interessante sobre probabilidades, especificamente o problema de Monty Hall, também conhecido por paradoxo de Monty Hall, trata-se de um problema matemático e um paradoxo que surgiu a partir de um concurso televisivo dos Estados Unidos chamado Let’s Make a Deal, exibido na década de 1970.[1]
Para demonstrar os conceitos discutidos aqui vamos simular alguns cenários utilizando funções básicas em R.</description>
    </item>
    
    <item>
      <title>Prevendo o futuro com modelos ARIMA</title>
      <link>/post/arima/</link>
      <pubDate>Mon, 23 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/arima/</guid>
      <description>Cover Photo by Lum3n.com from Pexels
Previsão com modelos ARIMA Existem muitos conceitos relacionados a previsão, cientificamente falando uma das formas mais bem fundamentadas é a previsão baseada em séries temporais, em que você observa uma variável ao longo do tempo, em intervalos constantes, a partir disso consegue extrair padrões e extrapolar esses padrões para o futuro.
Nesse post vamos demonstrar de forma simplificada como ajustar um modelo de previsão utilizando a família de modelos Autorregressivos Integrados de Médias Móveis (ARIMA) em R para para previsão de séries temporais utilizando o pacote forecast.</description>
    </item>
    
  </channel>
</rss>